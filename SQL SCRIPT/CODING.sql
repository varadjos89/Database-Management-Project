-- -----------------------------------------------------
-- SEARCHING COMPONENT
-- -----------------------------------------------------
DROP PROCEDURE IF EXISTS search_component; 
DELIMITER $$
CREATE PROCEDURE search_component(IN component_name VARCHAR(45))
BEGIN
	
	   IF (SELECT S.LOCATION 
          FROM MODULE MA
	      LEFT JOIN SYSTEMS S
		  ON MA.MODULE_ID= S.MODULE_ID
          WHERE S.NAME=component_name) IS NOT NULL 
          
	  THEN SELECT MB.NAME AS MODULE_NAME, MB.LOCATION AS MODULE_LOCATION,S.LOCATION AS LOCATION_OF_SYSTEM_IN_MODULE
            FROM MODULE MB
			LEFT JOIN SYSTEMS S
		    ON MB.MODULE_ID= S.MODULE_ID
            WHERE S.NAME=component_name;
          
      ELSEIF (SELECT LC.LOCATION 
		  FROM MODULE MD
	      LEFT JOIN LABORATORY L
		  ON MD.MODULE_ID= L.MODULE_ID
          LEFT JOIN SECTION SC
          ON L.LAB_CODE= SC.LAB_CODE
	      LEFT JOIN LAB_COMPONENTS LC
          ON SC.SECTION_ID=LC.SECTION_ID
          WHERE LC.NAME=component_name LIMIT 1) IS NOT NULL
          
	   THEN SELECT MD.NAME AS MODULE_NAME,MD.LOCATION AS MODULE_LOCATION,L.LOCATION AS LABORATORY_LOCATION,
          SC.SECTION_NAME AS SECTION_NAME, SC.LOCATION AS SECTION_LOCATION,LC.LOCATION AS COMPONENT_LOCATION
		  FROM MODULE MD
	      LEFT JOIN LABORATORY L
		  ON MD.MODULE_ID= L.MODULE_ID
          LEFT JOIN SECTION SC
          ON L.LAB_CODE= SC.LAB_CODE
	      LEFT JOIN LAB_COMPONENTS LC
          ON SC.SECTION_ID=LC.SECTION_ID
          WHERE LC.NAME=component_name;
          
	  /*ELSEIF (SELECT DC.LOCATION 
          FROM MODULE ME
	      LEFT JOIN DRAWER D
          ON ME.MODULE_ID= D.MODULE_ID
          LEFT JOIN DRAWER_COMPONENTS DC
          ON D.DRAWER_ID=DC.DRAWER_ID
          WHERE DC.NAME=component_name) IS NOT NULL
	
       THEN SELECT ME.NAME AS MODULE_NAME,ME.LOCATION AS MODULE_LOCATION,D.DRAWER_LOCATION AS DRAWER_LOCATION,
          DC.LOCATION AS COMPONENT_LOCATION
          FROM MODULE ME
	      LEFT JOIN DRAWER D
          ON ME.MODULE_ID= D.MODULE_ID
          LEFT JOIN DRAWER_COMPONENTS DC
          ON D.DRAWER_ID=DC.DRAWER_ID
          WHERE DC.NAME=component_name;*/
          
       ELSE SELECT ME.NAME AS MODULE_NAME,ME.LOCATION AS MODULE_LOCATION,D.DRAWER_LOCATION AS DRAWER_LOCATION,
          DC.LOCATION AS COMPONENT_LOCATION
          FROM MODULE ME
	      LEFT JOIN DRAWER D
          ON ME.MODULE_ID= D.MODULE_ID
          LEFT JOIN DRAWER_COMPONENTS DC
          ON D.DRAWER_ID=DC.DRAWER_ID
          WHERE DC.NAME=component_name;
          
	   /*ELSE CALL ground_unit_support(component_name);*/
          END IF;
          
          
END $$
DELIMITER ;
call search_component( 'Transformers');



DROP TRIGGER IF EXISTS SYSTEM_CONDITION_INSERTION;
DELIMITER $$
CREATE TRIGGER SYSTEM_CONDITION_INSERTION
	AFTER UPDATE
	ON SYSTEMS
	FOR EACH ROW
BEGIN
	INSERT INTO COMPONENT_CONDITION
    (COMPONENT_TAG, COMPONENT_CONDITION.NAME, LOCATION, COMPONENT_CONDITION.CONDITION)
    VALUES (NEW.SYSTEM_TAG_ID, NEW.NAME, NEW.LOCATION,  NEW.CONDITION);
END;
$$


DROP TRIGGER IF EXISTS LAB_COMPONENTS_CONDITION_INSERTION;
DELIMITER $$
CREATE TRIGGER LAB_COMPONENTS_CONDITION_INSERTION
	AFTER UPDATE
	ON LAB_COMPONENTS
	FOR EACH ROW
BEGIN
	INSERT INTO COMPONENT_CONDITION
    (COMPONENT_TAG, COMPONENT_CONDITION.NAME, LOCATION,COMPONENT_CONDITION.CONDITION)
    VALUES (NEW.COMPONENT_TAG, NEW.NAME, NEW.LOCATION, NEW.CONDITION);
END;
$$

DROP TRIGGER IF EXISTS DRAWER_COMPONENTS_CONDITION_INSERTION;
DELIMITER $$
CREATE TRIGGER DRAWER_COMPONENTS_CONDITION_INSERTION
	AFTER UPDATE
	ON DRAWER_COMPONENTS
	FOR EACH ROW
BEGIN
	INSERT INTO COMPONENT_CONDITION
    (COMPONENT_TAG, COMPONENT_CONDITION.NAME, LOCATION,COMPONENT_CONDITION.CONDITION)
    VALUES (NEW.COMPONENT_TAG, NEW.NAME, NEW.LOCATION, NEW.CONDITION);
END;
$$






-- -----------------------------------------------------
-- UPDATING COMPONENT CONDITION
-- -----------------------------------------------------

DROP PROCEDURE IF EXISTS update_condition; 
DELIMITER $$
CREATE PROCEDURE update_condition(IN component_name VARCHAR(45),IN component_location VARCHAR(45),IN component_condition BOOLEAN)
BEGIN
      IF (SELECT S.CONDITION 
          FROM MODULE MA
	      LEFT JOIN SYSTEMS S
		  ON MA.MODULE_ID= S.MODULE_ID
          WHERE S.NAME=component_name AND S.LOCATION=component_location) IS NOT NULL        
      
      THEN UPDATE SYSTEMS S
	       SET S.CONDITION= component_condition
           WHERE S.NAME=component_name AND S.LOCATION=component_location;

	  ELSEIF (SELECT LC.CONDITION 
		  FROM MODULE MD
	      LEFT JOIN LABORATORY L
		  ON MD.MODULE_ID= L.MODULE_ID
          LEFT JOIN SECTION SC
          ON L.LAB_CODE= SC.LAB_CODE
	      LEFT JOIN LAB_COMPONENTS LC
          ON SC.SECTION_ID=LC.SECTION_ID
          WHERE LC.NAME=component_name AND LC.LOCATION=component_location LIMIT 1) IS NOT NULL
          
	   THEN UPDATE LAB_COMPONENTS LC
	       SET LC.CONDITION= component_condition
           WHERE LC.NAME=component_name AND LC.LOCATION=component_location;
           
	   ELSE UPDATE DRAWER_COMPONENTS DC
	       SET DC.CONDITION= component_condition
           WHERE DC.NAME=component_name AND DC.LOCATION=component_location;
	   END IF;
END $$
DELIMITER ;
SET @component_name='I00001';
SET @component_location='ENCP2000201';
SET @component_condition=FALSE;

CALL update_condition(@component_name,@component_location,@component_condition);
SELECT * FROM DRAWER_COMPONENTS WHERE NAME='I00001';

SELECT * FROM DRAWER_COMPONENTS;

SELECT * FROM COMPONENT_CONDITION;


DELETE FROM LAB_COMPONENTS
WHERE NAME='Transformers';












-- -----------------------------------------------------
-- GETTING PREDEFINED VALUES FROM GROUND UNIT
-- -----------------------------------------------------

DROP PROCEDURE IF EXISTS ground_unit_support; 
DELIMITER $$
CREATE PROCEDURE ground_unit_support(IN component_name VARCHAR(45))
BEGIN
          
          IF (SELECT PS.LOCATION 
          FROM GROUND_UNIT U
	      LEFT JOIN PREDEFINED_SYSTEMS PS
		  ON U.UNIT_ID=PS.UNIT_ID
          WHERE PS.NAME=component_name) IS NOT NULL
          
          THEN SELECT PS.LOCATION AS MODULE_LOCATION
          FROM GROUND_UNIT U
	      LEFT JOIN PREDEFINED_SYSTEMS PS
		  ON U.UNIT_ID=PS.UNIT_ID
          WHERE PS.NAME=component_name;
          
          
          ELSEIF (SELECT PLC.SECTION_LOCATIION
		  FROM GROUND_UNIT U
	      LEFT JOIN PREDEFINED_LAB_COMPONENTS PLC
		  ON U.UNIT_ID=PLC.UNIT_ID
          WHERE PLC.NAME=component_name LIMIT 1) IS NOT NULL
          
          THEN SELECT PLC.SECTION_LOCATIION AS SECTION_LOCATION
		  FROM GROUND_UNIT U
	      LEFT JOIN PREDEFINED_LAB_COMPONENTS PLC
		  ON U.UNIT_ID=PLC.UNIT_ID
          WHERE PLC.NAME=component_name;
          
          
          ELSEIF (SELECT PDC.DRAWER_LOCATION 
          FROM GROUND_UNIT U
	      LEFT JOIN PREDEFINED_DRAWER_COMPONENT PDC
		  ON U.UNIT_ID=PDC.UNIT_ID
          WHERE PDC.NAME=component_name) IS NOT NULL
          
          THEN SELECT PDC.DRAWER_LOCATION AS DRAWER_LOCATION
          FROM GROUND_UNIT U
	      LEFT JOIN PREDEFINED_DRAWER_COMPONENT PDC
		  ON U.UNIT_ID=PDC.UNIT_ID
          WHERE PDC.NAME=component_name;
          
          ELSE SELECT 'COMPONENT DOES NOT EXISTS IN INTERNATIONAL SPACE STATION';
          END IF;

END $$
DELIMITER ;
call ground_unit_support( 'Transformers');

-- -----------------------------------------------------
-- ASTRO_BEE SEARCHING
-- -----------------------------------------------------
DROP PROCEDURE IF EXISTS astro_bee_search; 
DELIMITER $$
CREATE PROCEDURE astro_bee_search(IN component_name VARCHAR(45),IN component_location VARCHAR(45))
BEGIN
      
	IF (SELECT BS.LOCATION
       FROM ASTRO_BEE AB
       LEFT JOIN BEE_SYSTEMS BS
       ON AB.BEE_ID= BS.BEE_ID
       WHERE BS.NAME=component_name AND BS.MODULE_LOCATION=component_location) IS NOT NULL
       
    THEN SELECT BS.LOCATION
       FROM ASTRO_BEE AB
       LEFT JOIN BEE_SYSTEMS BS
       ON AB.BEE_ID= BS.BEE_ID
       WHERE BS.NAME=component_name AND BS.MODULE_LOCATION=component_location;
       
	ELSEIF (SELECT BDC.LOCATION
      FROM ASTRO_BEE AB
      LEFT JOIN BEE_DRAWER_COMPONENTS BDC
      ON AB.BEE_ID= BDC.BEE_ID 
      WHERE BDC.NAME=component_name AND BDC.DRAWER_LOCATION=component_location) IS NOT NULL
         
    THEN SELECT BDC.LOCATION
      FROM ASTRO_BEE AB
      LEFT JOIN BEE_DRAWER_COMPONENTS BDC
      ON AB.BEE_ID= BDC.BEE_ID 
      WHERE BDC.NAME=component_name AND BDC.DRAWER_LOCATION=component_location;
      
     ELSE SELECT BLC.LOCATION
     FROM ASTRO_BEE AB
     LEFT JOIN BEE_LAB_COMPONENTS BLC
     ON AB.BEE_ID= BLC.BEE_ID 
     WHERE BLC.NAME=component_name AND BLC.SECTION_LOCATION=component_location;
     END IF;


END $$
DELIMITER ;

SET @component_name='tRANSFORMERS';
SET @component_location='ENCP140073';
call astro_bee_search(@component_name,@component_location);


SELECT * FROM SYSTEMS_BACKUP;
SELECT * FROM LAB_COMPONENTS_BACKUP;
SELECT * FROM MODULE_BACKUP;
SELECT * FROM DRAWER_COMPONENTS_BACKUP;







